// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: referees.queries.sql

package db

import (
	"context"
)

const upsertReferee = `-- name: UpsertReferee :one
INSERT INTO
    referees (uid, name, type)
VALUES ($1, $2, $3) ON CONFLICT (uid)
DO
UPDATE
SET
    updated_at = NOW() RETURNING id, uid, name, type, created_at, updated_at, deleted_at
`

type UpsertRefereeParams struct {
	Uid  string
	Name string
	Type string
}

func (q *Queries) UpsertReferee(ctx context.Context, arg UpsertRefereeParams) (Referee, error) {
	row := q.db.QueryRow(ctx, upsertReferee, arg.Uid, arg.Name, arg.Type)
	var i Referee
	err := row.Scan(
		&i.ID,
		&i.Uid,
		&i.Name,
		&i.Type,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}
