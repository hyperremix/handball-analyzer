// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: team-members.queries.sql

package db

import (
	"context"
)

const upsertTeamMember = `-- name: UpsertTeamMember :one
INSERT INTO
    team_members (uid, team_id, name, number, type)
VALUES ($1, $2, $3, $4, $5) ON CONFLICT (uid)
DO
UPDATE
SET
    updated_at = NOW() RETURNING id, uid, team_id, name, number, type, created_at, updated_at, deleted_at
`

type UpsertTeamMemberParams struct {
	Uid    string
	TeamID int64
	Name   string
	Number string
	Type   string
}

func (q *Queries) UpsertTeamMember(ctx context.Context, arg UpsertTeamMemberParams) (TeamMember, error) {
	row := q.db.QueryRow(ctx, upsertTeamMember,
		arg.Uid,
		arg.TeamID,
		arg.Name,
		arg.Number,
		arg.Type,
	)
	var i TeamMember
	err := row.Scan(
		&i.ID,
		&i.Uid,
		&i.TeamID,
		&i.Name,
		&i.Number,
		&i.Type,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}
